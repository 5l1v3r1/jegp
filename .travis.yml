language: cpp
dist: bionic

env:
  global:
  - PATH=/tmp/bin:$PATH
  - CXXFLAGS="-Wpedantic -Wall -Wextra"

matrix:
  include:
  - os: osx
    compiler: clang
    addons:
      homebrew:
        packages:
        - cmake
        update: true
  - os: linux
    compiler: gcc
    addons:
      apt:
        packages:
        - g++-8
    env: MATRIX_EVAL="CXX=g++-8"
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - sourceline: 'ppa:ubuntu-toolchain-r/test'
        packages:
        - g++-9
    env: MATRIX_EVAL="CXX=g++-9"
  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CLANG_VERSION=6.0.0 && USE_LIBCXX=1"
  - os: linux
    compiler: clang
    addons: &libstdcxx8
      apt:
        packages:
        - libstdc++-8-dev
    env: MATRIX_EVAL="CLANG_VERSION=6.0.0"
  - os: linux
    compiler: clang
    env: MATRIX_EVAL="USE_LIBCXX=1"
  - os: linux
    compiler: clang
    addons: *libstdcxx8
  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CLANG_VERSION=8.0.0 && USE_LIBCXX=1"
  - os: linux
    compiler: clang
    addons: *libstdcxx8
    env: MATRIX_EVAL="CLANG_VERSION=8.0.0"
  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CLANG_VERSION=9.0.0 && USE_LIBCXX=1"
  - os: linux
    compiler: clang
    addons: &libstdcxx9
      apt:
        sources:
        - sourceline: 'ppa:ubuntu-toolchain-r/test'
        packages:
        - libstdc++-9-dev
    env: MATRIX_EVAL="CLANG_VERSION=9.0.0"

before_script:
- eval "${MATRIX_EVAL}"
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then travis/install_cmake.sh 3.15.7; fi
- |
  if [ -n "$CLANG_VERSION" ]; then
    travis/install_clang.sh ${CLANG_VERSION}
  fi
- |
  if [ -n "$USE_LIBCXX" ]; then
    CXXFLAGS="$CXXFLAGS -stdlib=libc++"
    export LDFLAGS=-lc++abi
  fi

script:
- cmake -E make_directory build
- cmake -E chdir build cmake .. -DJEGP_TEST=ON
- cmake --build build -j 2

notifications:
  email: false
